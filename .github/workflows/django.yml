name: Django CI/CD

on:
  push:
    branches:
      - main  # Trigger the workflow on any push to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to the main branch

jobs:
  test:
    runs-on: ubuntu-latest  # The job runs on the latest Ubuntu image

    steps:
    # Step 1: Checkout the repository
    - uses: actions/checkout@v2

    # Step 2: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'  # Use Python 3.11 for the environment

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Install all dependencies from requirements.txt
        pip install coverage            # Install coverage for code coverage tracking

    # Step 4: Run Unit and Integration tests
    - name: Run Unit and Integration tests along with E2E tests perfectly
      run: |
        python manage.py test  # Run unit and integration tests
        coverage run manage.py test  # If you are using coverage, this will collect data
        coverage report  # Display the coverage report

  
    # Step 6: Run linting tools (Flake8 and Black)
    - name: Run linting tools
      run: |
        pip install flake8 black  # Install linting tools
        black --check .  # Run Black in check mode (checks if the code follows PEP 8)

  deploy:
    needs: test  # Deploy only after tests pass
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - uses: actions/checkout@v2

    # Step 2: Set up Python and install dependencies
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    # Step 3: Deploy to PythonAnywhere using the API key
    - name: Deploy to PythonAnywhere using API
      env:
        PYTHONANYWHERE_API_KEY: ${{ secrets.Python_Anywhere }}
      run: |
        # Install requests library to make API calls
        pip install requests

        # Deploy using PythonAnywhere API
        python -c "
import requests

# Define your API key and PythonAnywhere API URL
api_key = '${{ secrets.Python_Anywhere }}'
username = 'your_pythonanywhere_username'
api_url = 'https://www.pythonanywhere.com/api/v0/user/{}/webapps/'.format(username)

# Prepare data for deployment (example)
data = {
  'name': 'my-app',
  'source_dir': '/path/to/your/source',
  'virtualenv': '/path/to/your/virtualenv',
  # Add any other necessary parameters based on your app setup
}

# Send the deployment request to PythonAnywhere
headers = {
  'Authorization': 'Token {}'.format(api_key),
}
response = requests.post(api_url, headers=headers, data=data)

if response.status_code == 201:
  print('Deployment Successful')
else:
  print('Failed to deploy:', response.text)
"
